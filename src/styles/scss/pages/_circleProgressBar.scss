@use "sass:math";

//green

//styling
$borderWidth: 4px;
$animationTime: 1.5s;
$border-color-default:  #A9E8D5;
$border-color-fill: #00B27D;
$size: 30px;

//Create how many steps
$howManySteps: 10; //this needs to be even. 
//for fun try using 20 and changine in the HTML the data-percentage to 15 or 85

.progress-green {
  width: $size;
  height: $size;
  line-height: $size;
  background: none;
  margin: 0 auto;
  box-shadow: none;
  position: relative;
  justify-content: center;
  margin-right: 5px;
  &:after {
    content: "";
    width: 100%;
    height: 100%;
    border-radius: 50%;
    border: $borderWidth solid $border-color-default;
    position: absolute;
    top: 0;
    left: 0;
  }
  > span {
    width: 50%;
    height: 100%;
    overflow: hidden;
    position: absolute;
    top: 0;
    z-index: 1;
  }
  .progress-left-green {
    left: 0;
  }
  .progress-bar-green {
    width: 100%;
    height: 100%;
    background: none;
    border-width: $borderWidth;
    border-style: solid;
    position: absolute;
    top: 0;
    border-color: $border-color-fill;
  }
  .progress-left-green .progress-bar-green {
    left: 100%;
    border-top-right-radius:  math.div($size, 2);
    border-bottom-right-radius:  math.div($size, 2);
    border-left: 0;
    -webkit-transform-origin: center left;
    transform-origin: center left;
    //animation: loading-2 1.5s linear forwards 1.8s;
  }
  .progress-right-green {
    right: 0;
    .progress-bar-green {
      left: -100%;
      border-top-left-radius:  math.div($size, 2);
      border-bottom-left-radius:  math.div($size, 2);
      border-right: 0;
      -webkit-transform-origin: center right;
      transform-origin: center right;
      //animation: loading-1 1.8s linear forwards;
    }
  }
  .progress-value-green {
    display: flex;
    border-radius: 50%;
    font-size: 10px;
    text-align: center;
    align-items: center;
    justify-content: center;
    height: 100%;
    color: #333;
    background: #fff;
    span {
     // font-size: 12px;
      text-transform: uppercase;
    }
  }
}

/* This for loop creates the 	necessary css animation names 
Due to the split circle of progress-left and progress right, we must use the animations on each side. 
*/
@for $i from 1 through $howManySteps {
  $stepName: ($i*(math.div(100, $howManySteps)));

	//animation only the left side if below 50%
	@if $i <= (math.div($howManySteps,2)) { 
		.progress-green[data-percentage="#{$stepName}"] {
			.progress-right-green .progress-bar-green {
				 animation: loading-#{$i} $animationTime linear forwards;
			}
			.progress-left-green .progress-bar-green {animation: 0;}
		}
	}
	//animation only the right side if above 50%
	@if $i >(math.div($howManySteps,2)) {  
		.progress-green[data-percentage="#{$stepName}"] {
			.progress-right-green .progress-bar-green {
				animation: loading-#{(math.div($howManySteps,2))} $animationTime linear forwards; //set the animation to longest animation
			}
			.progress-left-green .progress-bar-green {
      animation: loading-#{math.div($howManySteps,2)} $animationTime linear forwards $animationTime;
    }
		}
	}
}

//animation round
@for $i from 1 through (math.div($howManySteps,2)) { 
//$degrees: (180/(math.div($howManySteps,2)));
  $degrees: (math.div(180,math.div($howManySteps,2)));
	$degrees: ($degrees*$i);
	@keyframes loading-#{$i}{
    0%{
        -webkit-transform: rotate(0deg);
        transform: rotate(0deg);
    }
    100%{
        -webkit-transform: rotate($degrees);
			transform: rotate(#{$degrees}deg);
    }
	}
}



//blue

//styling
$borderWidth: 4px;
$animationTime: 1.5s;
$border-color-default: #FFFFFF;
$border-color-fill: #645DF6;
$size: 30px;

//Create how many steps
$howManySteps: 10; //this needs to be even. 
//for fun try using 20 and changine in the HTML the data-percentage to 15 or 85

.progress-agent {
  width: $size;
  height: $size;
  line-height: $size;
  background: none;
  margin: 0 auto;
  box-shadow: none;
  position: relative;
  justify-content: center;
  margin-right: 5px;
  &:after {
    content: "";
    width: 100%;
    height: 100%;
    border-radius: 50%;
    border: $borderWidth solid $border-color-default;
    position: absolute;
    top: 0;
    left: 0;
  }
  > span {
    width: 50%;
    height: 100%;
    overflow: hidden;
    position: absolute;
    top: 0;
    z-index: 1;
  }
  .progress-left-agent {
    left: 0;
  }
  .progress-bar-agent {
    width: 100%;
    height: 100%;
    background: none;
    border-width: $borderWidth;
    border-style: solid;
    position: absolute;
    top: 0;
    border-color: $border-color-fill;
  }
  .progress-left-agent .progress-bar-agent {
    left: 100%;
    border-top-right-radius:  math.div($size, 2);
    border-bottom-right-radius:  math.div($size, 2);
    border-left: 0;
    -webkit-transform-origin: center left;
    transform-origin: center left;
    //animation: loading-2 1.5s linear forwards 1.8s;
  }
  .progress-right-agent {
    right: 0;
    .progress-bar-agent {
      left: -100%;
      border-top-left-radius:  math.div($size, 2);
      border-bottom-left-radius:  math.div($size, 2);
      border-right: 0;
      -webkit-transform-origin: center right;
      transform-origin: center right;
      //animation: loading-1 1.8s linear forwards;
    }
  }
  .progress-value-agent {
    display: flex;
    border-radius: 50%;
    font-size: 10px;
    text-align: center;
    align-items: center;
    justify-content: center;
    height: 100%;
    color: #333;
    background: #fff;
    span {
     // font-size: 12px;
      text-transform: uppercase;
    }
  }
}

/* This for loop creates the 	necessary css animation names 
Due to the split circle of progress-left and progress right, we must use the animations on each side. 
*/
@for $i from 1 through $howManySteps {
  $stepName: ($i*(math.div(100, $howManySteps)));

	//animation only the left side if below 50%
	@if $i <= (math.div($howManySteps,2)) { 
		.progress-agent[data-percentage="#{$stepName}"] {
			.progress-right-agent .progress-bar-agent {
				 animation: loading-#{$i} $animationTime linear forwards;
			}
			.progress-left-agent .progress-bar-agent {animation: 0;}
		}
	}
	//animation only the right side if above 50%
	@if $i >(math.div($howManySteps,2)) {  
		.progress-agent[data-percentage="#{$stepName}"] {
			.progress-right-agent .progress-bar-agent {
				animation: loading-#{(math.div($howManySteps,2))} $animationTime linear forwards; //set the animation to longest animation
			}
			.progress-left-agent .progress-bar-agent {
      animation: loading-#{math.div($howManySteps,2)} $animationTime linear forwards $animationTime;
    }
		}
	}
}

//animation round
@for $i from 1 through (math.div($howManySteps,2)) { 
//$degrees: (180/(math.div($howManySteps,2)));
  $degrees: (math.div(180,math.div($howManySteps,2)));
	$degrees: ($degrees*$i);
	@keyframes loading-#{$i}{
    0%{
        -webkit-transform: rotate(0deg);
        transform: rotate(0deg);
    }
    100%{
        -webkit-transform: rotate($degrees);
			transform: rotate(#{$degrees}deg);
    }
	}
}


//image crop brogress bar

.crop-progress-wrap {
  flex-basis: calc(100% - 75px);
  height: 4px;
  background:$gray-blue;
  border-radius: 100px;
}

.crop-progress-inner {
  height: 100%;
  width:75%;
  background-color: $blue-active;
  position: relative;
} 

.crop-progress-inner::after {
  content: "";
  position: absolute;
  position: absolute;
  width: 14px;
  height: 14px;
  border-radius: 50%;
  background: $blue-active;
  top: 50%;
  transform: translateY(-50%);
  right: 0;
}